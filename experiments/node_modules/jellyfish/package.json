{
  "name": "jellyfish",
  "description": "A framework for launching environments and running JS",
  "tags": [
    "web",
    "automation",
    "browser",
    "javascript"
  ],
  "version": "0.0.11",
  "author": {
    "name": "Adam Christian",
    "email": "adam.christian@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/admc/jellyfish.git"
  },
  "bugs": {
    "url": "http://github.com/admc/jellyfish/issues"
  },
  "engines": [
    "node"
  ],
  "main": "./lib/main",
  "dependencies": {
    "paperboy": "0.0.x",
    "request": "1.9.x",
    "zombie": "0.x",
    "wd": "0.0.8"
  },
  "bin": {
    "jellyfish": "./lib/bin.js"
  },
  "directories": {
    "lib": "./lib"
  },
  "readme": "# Jellyfish -- Browser launcher and Javascript execution engine.\n\nJellyfish bridges the gap between server and client side javascript by allowing \ncontrol of all the major browsers from a node script.\n\nFrom running unit tests across platforms, to automating browser based workflows,\njellyfish aims to free javascript from the confines of a single environment.\n\n## Install\n\n<pre>\nnpm install jellyfish\n</pre>\n\nOr from source:\n\n<pre>\ngit clone git://github.com/admc/jellyfish.git \ncd jellyfish\nnpm link .\n</pre>\n\n## Platforms\n\nMacOSX 10.6<br>\nUbuntu 10.x\n\n## Browsers\nFirefox 3.x, 4b <br>\nGoogle Chrome <br>\nSafari (MacOSX)<br>\nSelenium 2/WebDriver<br>\nSauce Labs OnDemand<br>\nZombie (headless node.js browser)<br>\n\n(Provides hooks to Saucelabs OnDemand platform allowing execution in\nall major browsers.)\n\n## Usage\nnpm require\n<pre>\nvar jellyfish = require('jellyfish'),\n  , assert = require('assert');\n</pre>\n\ninit a browser (createFirefox, createChrome, createZombie)\n<pre>\nvar browser = jellyfish.createFirefox();\n</pre>\n\ngoto a web site\n<pre>\nbrowser.go(\"http://www.jelly.io\")\n</pre>\n\nverify the title\n<pre>\n.js(\"document.title\", function(o) {\n  assert.equal(o.result, \"Jelly.io: Jellyfish Home\")\n})\n</pre>\n\nrun some local javascript\n<pre>\n.jsfile(\"./test.js\", function(o) {\n  assert.equal(o.result, \"alerted: Jellyfish local file loaded successfully!\")\n})\n</pre>\n\nrun some remote javascript, stop the browser, then exit\n<pre>\n.jsurl(\"http://jelly.io/test.js\", function(o) { \n  assert.equal(o.result, \"alerted: Jellyfish remote file loaded successfully!\")\n  browser.stop(function() {\n    setTimeout(process.exit(), 2000);\n  })\n})\n</pre>\n\n## Reporting\n\n<pre>\nvar jellyfish = require('jellyfish')\n\nvar browser = jellyfish.createFirefox(function(){\n  browser.couch({uri:'my couch url', port:5984, db:'mydbname'})\n});\n\n// You can just do browser.couch() and it will default to:\n// {uri:'localhost', port:5984, db:'jellyfish'}\n\n// Do stuff and it will automatically get reported to couch!\n</pre>\n\n## ~/.jfrc\n\n<pre>\n{\n  , \"firefox\": \"/path/to/binary\" //binary path to firefox if you want to set it manually\n  , \"chrome\": \"path/to/binary\" //binary path\n  , \"safari\": \"path/to/binary\" //binary path\n  , \"interface\": \"Airport\" // required for safari testing (proxy setting)\n  , \"username\": \"username\" //sauce labs username\n  , \"accessKey\": \"apikey\" //sauce labs apikey\n  , \"browserName\": \"firefox\" //sauce labs default browser\n  , \"version\": \"4.0\" // sauce labs default browser version\n}\n</pre>",
  "_id": "jellyfish@0.0.11",
  "dist": {
    "shasum": "1b01af8dd1c0884af3358775ff4eefd7a35b4ac9"
  },
  "_from": "jellyfish"
}
